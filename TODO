- testthatsomemore should have file system testing support
- syberia_init function for creating a syberia project.
- potentially obsolete the syberia_config file. The root of the syberia
  projects should just be defined by the .syberia directory (and maybe
  we can even get rid of that)
- for model stage, maybe we should change the convention to:
  model = list(gbm = list(...), logreg = list(...))
  so that it follows similar conventions. (In syberia@multi_model_stage)
- overload the source function to check if the file is a syberia model.
  If it is, run it instead!
- mungebits should also be syberia resources and have train / predict
  setup methods in lib/mungebits
- let config/stages/import.r etc. function as default configurations for
  stages. For example, If we placed list(dep_var = 'default_indicator') 
  in config/stages/evaluation.r, then this would get merged into the
  a syberia definition missing evaluation/dep_var.
- lib/classifiers triggers custom classifiers on partial match, so if
  someone has a 'gbm_other', it will overwrite tundra's GBM. Fixing this
  could be tricky because model_stage is using syberia_objects to fetch
  the classifier, which would be idempotent -- maybe some sort of clever flag
  in syberia objects?

Stagerunner:

- Default run stage for a remembering stageRunner should be from the *last*
unfinished stage. DUH! How simple... (in syberia@model_env_presets and
stagerunner@mode_parameter)

Bigger items:

- Use opencpu's eval_fork to dynamically detach syberia runs from head.
  Have a jobs() helper.
- syberiaTutorial package for an interactive build-up tutorial of Syberia
- move all tests to root/test/ ?

Technicalities:

- Use Sys.glob built-in helper in syberiaStructure
- Incorporate setTimeLimit functionality (see openCPU package for help)
- Use base::reg.finalizer to clean up Syberia's cached environments
- Use Recall in recursive stageRunner methods
- Use rapply instead of nested helper lapply's
- More interesting functions: all.names, all.vars, agrep, abbreviate,
  browseEnv (especially on a stageRunner context), aregexec, Find, Position
